#!/usr/bin/env bash
# Tmux Sessionizer - FZF-based session switcher

if [[ $# -eq 1 ]]; then
    selected=$1
else
    # Directories to search for projects
    search_dirs=(
        "$HOME"
        "$HOME/Projects"
        "$HOME/Code"
        "$HOME/Work"
        "$HOME/Documents"
        "$HOME/.config"
        "$HOME/Downloads"
    )
    
    # Find directories and use fzf for selection
    selected=$(find "${search_dirs[@]}" -mindepth 1 -maxdepth 3 -type d 2>/dev/null | \
        grep -E '\.(git|config)$|/(src|projects?|code|work|documents?)(/|$)' -i | \
        fzf --prompt="📁 Select project: " \
            --height=50% \
            --border=rounded \
            --preview='ls -la {} 2>/dev/null || echo "Directory preview not available"' \
            --preview-window=right:60% \
            --header="Press ESC to cancel, ENTER to select" \
            --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
            --color=fg:#cdd6f4,header:#f38ba8,info:#cba6ac,pointer:#f5e0dc \
            --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6ac,hl+:#f38ba8)
fi

if [[ -z $selected ]]; then
    exit 0
fi

# Create session name from directory name
selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

# If not in tmux and tmux is not running, start new session
if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s "$selected_name" -c "$selected"
    exit 0
fi

# Create session if it doesn't exist
if ! tmux has-session -t="$selected_name" 2> /dev/null; then
    tmux new-session -d -s "$selected_name" -c "$selected"
fi

# Attach or switch to session
if [[ -z $TMUX ]]; then
    tmux attach-session -t "$selected_name"
else
    tmux switch-client -t "$selected_name"
fi
